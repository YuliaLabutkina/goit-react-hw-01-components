{"version":3,"sources":["img/not_found.jpg","components/profile/descriptionStyles.js","components/profile/description.js","components/profile/statsStyles.js","components/profile/stats.js","components/profile/profileStyles.js","components/profile/profile.js","components/statistics/randomRGB.js","components/statistics/statListStyles.js","components/statistics/statList.js","components/statistics/statisticsStyles.js","components/statistics/statistics.js","components/friendList/friendListItemStyles.js","components/friendList/friendListItem.js","components/friendList/friendListStyles.js","components/friendList/friendList.js","components/transactionHistory/transactionHistoryItemsStyles.js","components/transactionHistory/transactionHistoryItems.js","components/transactionHistory/transactionHistoryStyle.js","components/transactionHistory/transactionHistory.js","components/app/appStyles.js","components/app/app.js","index.js"],"names":["DescriptionWrap","styled","div","Img","img","Name","p","Tag","Location","Description","name","tag","location","avatar","src","alt","defaultProps","defaultImg","List","ul","ListItem","li","ItemLabel","span","ItemQuantity","Stats","followers","views","likes","Container","Profile","user","stats","descriptionProps","RGB","max","min","r","Math","floor","random","g","b","StatisticalList","Item","ItemPercentage","StatList","statistical","map","id","label","percentage","style","SectionWrapper","section","SectionTitle","h2","Statistics","title","length","IsOnline","props","isOnline","FriendListItem","friends","FriendList","TableRow","tr","TableCell","td","TransactionHistoryItems","items","type","amount","currency","Table","table","TableHead","thead","TableHeadItem","th","TransactionHistory","AppWrapper","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55133ae4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/not_found.65428eaa.jpg\";","import styled from 'styled-components';\r\n\r\nconst DescriptionWrap = styled.div`\r\n  margin: 20px auto;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 150px;\r\n  margin: 0 auto 16px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst Tag = styled.p`\r\n  text-align: center;\r\n  color: gray;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst Location = styled.p`\r\n  text-align: center;\r\n  color: gray;\r\n`;\r\n\r\nexport { DescriptionWrap, Img, Name, Tag, Location };","import PropTypes from 'prop-types';\r\nimport defaultImg from '../../img/not_found.jpg';\r\nimport { DescriptionWrap, Img, Name, Tag, Location } from './descriptionStyles';\r\n\r\nconst Description = ({ name, tag, location, avatar }) => {\r\n    return (\r\n      <DescriptionWrap>\r\n        <Img\r\n          src={avatar}\r\n          alt=\"Аватар пользователя\"\r\n        />\r\n        <Name>{name}</Name>\r\n        <Tag>@{tag}</Tag>\r\n        {location && <Location>{location}</Location>}\r\n      </DescriptionWrap>\r\n    )\r\n};\r\n\r\nDescription.defaultProps = ({\r\n    name: \"unknown\",\r\n    tag: \"unknown\",\r\n    avatar: defaultImg,\r\n});\r\n\r\nDescription.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n};\r\n\r\nexport default Description;","import styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  list-style: none;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  padding: 10px;\r\n  background-color: #F0FFF0;\r\n  box-shadow: 2px 1px 2px 1px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.12);\r\n`;\r\n\r\nconst ItemLabel = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst ItemQuantity = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport { List, ListItem, ItemLabel, ItemQuantity };","import PropTypes from 'prop-types';\r\nimport { List, ListItem, ItemLabel, ItemQuantity } from './statsStyles';\r\n\r\nconst Stats = ({ followers, views, likes }) => {\r\n  return (\r\n    <List>\r\n      <ListItem>\r\n        <ItemLabel>Followers</ItemLabel>\r\n        <ItemQuantity>{followers}</ItemQuantity>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ItemLabel>Views</ItemLabel>\r\n        <ItemQuantity>{views}</ItemQuantity>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ItemLabel>Likes</ItemLabel>\r\n        <ItemQuantity>{likes}</ItemQuantity>\r\n      </ListItem>\r\n    </List>\r\n  )\r\n};\r\n\r\nStats.defaultProps = ({\r\n    followers: 0,\r\n    views: 0,\r\n    likes: 0,\r\n});\r\n\r\nStats.propTypes = {\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Stats;","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  margin: 30px auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 300px;\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.12);\r\n  transition: transform 400ms linear, box-shadow 200ms linear;\r\n\r\n  &:hover {\r\n  transform: scale(1.03);\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.35), 0 10px 10px rgba(0,0,0,0.32) ;\r\n}\r\n`;\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport Description from './description';\r\nimport Stats from './stats';\r\nimport Container from './profileStyles';\r\n\r\nconst Profile = ({ user }) => {\r\n  const { stats, ...descriptionProps } = user;\r\n  return (\r\n    user && (\r\n      <Container>\r\n        <Description {...descriptionProps}/>\r\n        <Stats {...stats}/>\r\n      </Container>\r\n    )\r\n  )\r\n};\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Profile;","const RGB = (max, min) => {\r\n  const r = Math.floor(Math.random() * (max - min + 1)) + min;\r\n  const g = Math.floor(Math.random() * (max - min + 1)) + min;\r\n  const b = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n  return `rgb(${r}, ${g}, ${b})`;\r\n};\r\n\r\nexport default RGB;","import styled from 'styled-components';\r\n\r\nconst StatisticalList = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  list-style: none;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  padding: 10px;\r\n  box-shadow: 2px 1px 2px 1px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.12);\r\n`;\r\n\r\nconst ItemLabel = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  color: white;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst ItemPercentage = styled.span`\r\n  display: block;\r\n  font-size: 20px;\r\n  text-align: center;\r\n  color: white;\r\n`;\r\n\r\nexport { StatisticalList, Item, ItemLabel, ItemPercentage };","import PropTypes from 'prop-types';\r\nimport RGB from './randomRGB';\r\nimport { StatisticalList, Item, ItemLabel, ItemPercentage } from './statListStyles';\r\n\r\nconst StatList = ({ statistical }) => {\r\n  return (\r\n    <StatisticalList>\r\n      {statistical.map(({ id, label, percentage }) => (\r\n        <Item key={id} style={{ 'backgroundColor': `${RGB(0, 255)}` }}>\r\n          <ItemLabel>{label}</ItemLabel>\r\n          <ItemPercentage>{percentage}%</ItemPercentage>\r\n        </Item>\r\n      ))}\r\n    </StatisticalList>\r\n  )\r\n};\r\n\r\nStatList.propTypes = {\r\n  statistical: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n  })),\r\n};\r\n\r\nexport default StatList;","import styled from 'styled-components';\r\n\r\nconst SectionWrapper = styled.section`\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 300px;\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.12);\r\n  transition: transform 400ms linear, box-shadow 200ms linear;\r\n\r\n  &:hover {\r\n  transform: scale(1.03);\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.35), 0 10px 10px rgba(0,0,0,0.32) ;\r\n  }\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport { SectionWrapper, SectionTitle };","import PropTypes from 'prop-types';\r\nimport StatList from './statList';\r\nimport { SectionWrapper, SectionTitle } from './statisticsStyles';\r\n\r\nconst Statistics = ({ title, statistical }) => {\r\n    return (\r\n        <SectionWrapper>\r\n            {title && <SectionTitle>{ title }</SectionTitle>}\r\n            {statistical.length > 0 && <StatList statistical={statistical}/>}\r\n        </SectionWrapper>\r\n    )\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  statistical: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n};\r\n\r\nexport default Statistics;","import styled from 'styled-components';\r\n\r\nconst Item = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 300px;\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.12);\r\n  transition: transform 400ms linear, box-shadow 200ms linear;\r\n  &:hover {\r\n  transform: scale(1.03);\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.35), 0 10px 10px rgba(0,0,0,0.32) ;\r\n  }\r\n  &:not(:last-child) {\r\n      margin-bottom: 16px;\r\n  }\r\n`;\r\n\r\nconst IsOnline = styled.span`\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 50%;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  background-color: ${props => (props.isOnline ? 'green' : 'red')};\r\n`;\r\n\r\nconst Img = styled.img`\r\n  margin-right: 20px;\r\n  padding: 10px 0;\r\n  width: 48px;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport { Item, IsOnline, Img, Name };","import PropTypes from 'prop-types';\r\nimport { Item, IsOnline, Img, Name } from './friendListItemStyles'\r\n\r\nconst FriendListItem = ({ friends }) => {\r\n    return (\r\n        friends.map(({ id, isOnline, avatar, name }) => (\r\n            <Item key={id}>\r\n                {<IsOnline isOnline={isOnline} />}\r\n                <Img src={avatar} alt={name} />\r\n                <Name>{name}</Name>\r\n            </Item>\r\n        ))\r\n    )\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  friends: PropTypes.arrayOf(PropTypes.shape({\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n  })),\r\n};\r\n\r\nexport default FriendListItem;","import styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default List;","import PropTypes from 'prop-types';\r\nimport FriendListItem from './friendListItem';\r\nimport List from './friendListStyles';\r\n\r\nconst FriendList = ({ friends }) => {\r\n    return (\r\n        friends.length > 0 && (\r\n            <List>\r\n                <FriendListItem friends={friends} />\r\n            </List>\r\n        )\r\n    )\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n};\r\n\r\nexport default FriendList;","import styled from 'styled-components';\r\n\r\nconst TableRow = styled.tr`\r\n  &:nth-child(even) {\r\n      background-color: #DCDCDC;\r\n  }\r\n`;\r\n\r\nconst TableCell = styled.td`\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nexport { TableRow, TableCell };","import PropTypes from 'prop-types';\r\nimport { TableRow, TableCell } from './transactionHistoryItemsStyles';\r\n\r\nconst TransactionHistoryItems = ({ items }) => {\r\n  if (items.length === 0) return null;\r\n    return (\r\n        <tbody>\r\n            {items.map(({ id, type, amount, currency }) => (\r\n               <TableRow key={id}>\r\n                    <TableCell>{type}</TableCell>\r\n                    <TableCell>{amount}</TableCell>\r\n                    <TableCell>{currency}</TableCell>\r\n                </TableRow>\r\n            ))\r\n            }\r\n        </tbody>\r\n    )\r\n};\r\n\r\nTransactionHistoryItems.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.string.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default TransactionHistoryItems;","import styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n  width: 300px;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.12);\r\n  transition: transform 400ms linear, box-shadow 200ms linear;\r\n\r\n  &:hover {\r\n  transform: scale(1.03);\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.35), 0 10px 10px rgba(0,0,0,0.32);\r\n  }\r\n`;\r\n\r\nconst TableHead = styled.thead`\r\n  font-size: 22px;\r\n  background-color: #00BFFF;\r\n`;\r\n\r\nconst TableHeadItem = styled.th`\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nexport { Table, TableHead, TableHeadItem };","import PropTypes from 'prop-types';\r\nimport TransactionHistoryItems from './transactionHistoryItems';\r\nimport { Table, TableHead, TableHeadItem } from './transactionHistoryStyle';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n    return (\r\n        <Table>\r\n            <TableHead>\r\n                <tr>\r\n                    <TableHeadItem>Type</TableHeadItem>\r\n                    <TableHeadItem>Amount</TableHeadItem>\r\n                    <TableHeadItem>Currency</TableHeadItem>\r\n                </tr>\r\n            </TableHead>\r\n            <TransactionHistoryItems items={items}/>\r\n        </Table>\r\n    );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  statistical: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n};\r\n\r\nexport default TransactionHistory;","import styled from 'styled-components';\r\n\r\nconst AppWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(1, 1fr);\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-template-rows: repeat(2, 1fr, 2fr);\r\n  }\r\n`;\r\n\r\nexport default AppWrapper;","import Profile from '../profile'\r\nimport user from '../../data/user.json';\r\nimport Statistics from '../statistics';\r\nimport statistical from '../../data/statistical-data.json';\r\nimport FriendList from '../friendList';\r\nimport friends from '../../data/friends.json';\r\nimport TransactionHistory from '../transactionHistory';\r\nimport items from '../../data/transactions.json';\r\nimport AppWrapper from './appStyles';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n          <AppWrapper>\r\n            <Profile user={user}/>\r\n            <Statistics title={\"Upload stats\"} statistical={statistical}/>\r\n            <FriendList friends={friends}/>\r\n            <TransactionHistory items={items}/>\r\n          </AppWrapper>\r\n    )\r\n};\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './base.css';\nimport App from './components/app/app';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}