{"version":3,"sources":["components/profile/description.js","components/profile/stats.js","components/profile/profile.js","components/statistics/statList.js","components/statistics/statistics.js","components/friendList/friendListItem.js","components/friendList/friendList.js","components/transactionHistory/transactionHistoryItems.js","components/transactionHistory/transactionHistory.js","components/app/app.js","index.js"],"names":["DescriptionWrap","styled","div","Img","img","Name","p","Tag","Location","Description","name","tag","location","avatar","src","alt","defaultProps","List","ul","ListItem","li","ItemLabel","span","ItemQuantity","Stats","followers","views","likes","Container","Profile","user","stats","RGB","max","min","r","Math","floor","random","g","b","StatisticalList","Item","ItemPercentage","StatList","statistical","map","statistic","style","label","percentage","id","SectionWrapper","section","SectionTitle","h2","Statistics","title","IsOnline","FriendListItem","friends","friend","isOnline","backgroundColor","width","FriendList","TableRow","tr","TableCell","td","TransactionHistoryItems","items","item","type","amount","currency","Table","table","TableHead","thead","TableHeadItem","th","TransactionHistory","AppWrapper","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb925c82.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DescriptionWrap = styled.div`\r\n  margin: 20px auto;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 150px;\r\n  margin: 0 auto 16px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst Tag = styled.p`\r\n  text-align: center;\r\n  color: gray;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst Location = styled.p`\r\n  text-align: center;\r\n  color: gray;\r\n`;\r\n\r\nconst Description = ({ name, tag, location, avatar }) => {\r\n    return (\r\n      <DescriptionWrap>\r\n        <Img\r\n          src={avatar}\r\n          alt=\"Аватар пользователя\"\r\n        />\r\n        <Name>{name}</Name>\r\n        <Tag>@{tag}</Tag>\r\n        <Location>{location}</Location>\r\n      </DescriptionWrap>\r\n    )\r\n};\r\n\r\nDescription.defaultProps = ({\r\n    name: \"unknown\",\r\n    tag: \"unknown\",\r\n});\r\n\r\nDescription.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n};\r\n\r\nexport default Description;","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst List = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  list-style: none;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  padding: 10px;\r\n  background-color: #F0FFF0;\r\n  box-shadow: 2px 1px 2px 1px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.12);\r\n`;\r\n\r\nconst ItemLabel = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst ItemQuantity = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Stats = ({ followers, views, likes }) => {\r\n  return (\r\n    <List>\r\n      <ListItem>\r\n        <ItemLabel>Followers</ItemLabel>\r\n        <ItemQuantity>{followers}</ItemQuantity>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ItemLabel>Views</ItemLabel>\r\n        <ItemQuantity>{views}</ItemQuantity>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ItemLabel>Likes</ItemLabel>\r\n        <ItemQuantity>{likes}</ItemQuantity>\r\n      </ListItem>\r\n    </List>\r\n  )\r\n};\r\n\r\nStats.defaultProps = ({\r\n    followers: 0,\r\n    views: 0,\r\n    likes: 0,\r\n});\r\n\r\nStats.propTypes = {\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Stats;","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Description from './description';\r\nimport Stats from './stats';\r\n\r\n\r\nconst Container = styled.div`\r\n  margin: 30px auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 300px;\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.12);\r\n  transition: transform 400ms linear, box-shadow 200ms linear;\r\n\r\n  &:hover {\r\n  transform: scale(1.03);\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.35), 0 10px 10px rgba(0,0,0,0.32) ;\r\n}\r\n`;\r\n\r\nconst Profile = ({ user }) => {\r\n  return (\r\n  <Container>\r\n      <Description {...user}></Description>\r\n      <Stats {...user.stats}></Stats>\r\n  </Container>\r\n  )\r\n};\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Profile;","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RGB = (max, min) => {\r\n  const r = Math.floor(Math.random() * (max - min + 1)) + min;\r\n  const g = Math.floor(Math.random() * (max - min + 1)) + min;\r\n  const b = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n  return `rgb(${r}, ${g}, ${b})`;\r\n};\r\n\r\nconst StatisticalList = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  list-style: none;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  padding: 10px;\r\n  box-shadow: 2px 1px 2px 1px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.12);\r\n`;\r\n\r\nconst ItemLabel = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  color: white;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst ItemPercentage = styled.span`\r\n  display: block;\r\n  font-size: 20px;\r\n  text-align: center;\r\n  color: white;\r\n`;\r\n\r\nconst StatList = ({ statistical }) => {\r\n  return (\r\n    <StatisticalList>\r\n\r\n      {statistical.map(statistic => (\r\n        <Item key={statistic.id} style={{ 'backgroundColor': `${RGB(0, 255)}` }}>\r\n          <ItemLabel>{statistic.label}</ItemLabel>\r\n          <ItemPercentage>{statistic.percentage}%</ItemPercentage>\r\n        </Item>\r\n      ))}\r\n    </StatisticalList>\r\n  )\r\n};\r\n\r\nStatList.propTypes = {\r\n  statistical: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n  })),\r\n};\r\n\r\nexport default StatList;","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport StatList from './statList';\r\n\r\n\r\nconst SectionWrapper = styled.section`\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 300px;\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.12);\r\n  transition: transform 400ms linear, box-shadow 200ms linear;\r\n\r\n  &:hover {\r\n  transform: scale(1.03);\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.35), 0 10px 10px rgba(0,0,0,0.32) ;\r\n  }\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Statistics = ({ title, statistical }) => {\r\n    return (\r\n        <SectionWrapper>\r\n            {title && <SectionTitle>{ title }</SectionTitle>}\r\n            <StatList statistical={statistical}></StatList>\r\n        </SectionWrapper>\r\n    )\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  statistical: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n};\r\n\r\nexport default Statistics;","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Item = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 300px;\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.12);\r\n  transition: transform 400ms linear, box-shadow 200ms linear;\r\n  &:hover {\r\n  transform: scale(1.03);\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.35), 0 10px 10px rgba(0,0,0,0.32) ;\r\n  }\r\n  &:not(:last-child) {\r\n      margin-bottom: 16px;\r\n  }\r\n`;\r\n\r\nconst IsOnline = styled.span`\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 50%;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  margin-right: 20px;\r\n  padding: 10px 0;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst FriendListItem = ({ friends }) => {\r\n    return (\r\n        <>\r\n            {friends.map(friend => (\r\n                <Item key={friend.id}>\r\n                    { friend.isOnline ? <IsOnline style={{ backgroundColor: 'green' }}></IsOnline> : <IsOnline style={{ backgroundColor: 'red' }}></IsOnline>}\r\n                    <Img src={friend.avatar} alt={friend.name} width=\"48\" />\r\n                    <Name>{friend.name}</Name>\r\n                </Item>\r\n            ))}\r\n        </>\r\n    )\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  friends: PropTypes.arrayOf(PropTypes.shape({\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n  })),\r\n};\r\n\r\nexport default FriendListItem;","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from './friendListItem';\r\n\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst FriendList = ({ friends }) => {\r\n    return (\r\n        <List>\r\n            <FriendListItem friends={friends}></FriendListItem>\r\n        </List>\r\n    )\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n};\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst TableRow = styled.tr`\r\n  &:nth-child(even) {\r\n      background-color: #DCDCDC;\r\n  }\r\n`;\r\n\r\nconst TableCell = styled.td`\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst TransactionHistoryItems = ({ items }) => {\r\n    return (\r\n        <tbody>\r\n            {items.map(item => (\r\n               <TableRow key={item.id}>\r\n                    <TableCell>{item.type}</TableCell>\r\n                    <TableCell>{item.amount}</TableCell>\r\n                    <TableCell>{item.currency}</TableCell>\r\n                </TableRow>\r\n            ))\r\n            }\r\n        </tbody>\r\n    )\r\n};\r\n\r\nTransactionHistoryItems.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.string.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default TransactionHistoryItems;","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport TransactionHistoryItems from './transactionHistoryItems';\r\n\r\n\r\nconst Table = styled.table`\r\n  width: 300px;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.12);\r\n  transition: transform 400ms linear, box-shadow 200ms linear;\r\n\r\n  &:hover {\r\n  transform: scale(1.03);\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.35), 0 10px 10px rgba(0,0,0,0.32);\r\n  }\r\n`;\r\n\r\nconst TableHead = styled.thead`\r\n  font-size: 22px;\r\n  background-color: #00BFFF;\r\n`;\r\n\r\nconst TableHeadItem = styled.th`\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n    return (\r\n        <Table>\r\n            <TableHead>\r\n                <tr>\r\n                    <TableHeadItem>Type</TableHeadItem>\r\n                    <TableHeadItem>Amount</TableHeadItem>\r\n                    <TableHeadItem>Currency</TableHeadItem>\r\n                </tr>\r\n            </TableHead>\r\n            <TransactionHistoryItems items={items}></TransactionHistoryItems >\r\n        </Table>\r\n    );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  statistical: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n};\r\n\r\nexport default TransactionHistory;","import styled from 'styled-components';\r\nimport Profile from '../profile/profile'\r\nimport user from '../../data/user.json';\r\nimport Statistics from '../statistics/statistics';\r\nimport statistical from '../../data/statistical-data.json';\r\nimport FriendList from '../friendList/friendList';\r\nimport friends from '../../data/friends.json';\r\nimport TransactionHistory from '../transactionHistory/transactionHistory';\r\nimport items from '../../data/transactions.json';\r\n\r\n\r\nconst AppWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(1, 1fr);\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-template-rows: repeat(2, 1fr, 2fr);\r\n  }\r\n`;\r\n\r\nconst App = () => {\r\n    return (\r\n          <AppWrapper>\r\n            <Profile user={user}></Profile>\r\n            <Statistics title={\"Upload stats\"} statistical={statistical}></Statistics>\r\n            <FriendList friends={friends}></FriendList>\r\n            <TransactionHistory items={items}></TransactionHistory>\r\n          </AppWrapper>\r\n    )\r\n};\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './base.css';\nimport App from './components/app/app';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}